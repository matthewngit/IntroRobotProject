<?xml version="1.0" encoding="UTF-8"?>
<launch>

  <!-- ROS PARAMETERS -->
  <!-- Initial robot pose in Gazebo: change for levels A, C or E (F for demo)-->
  <arg name="student_level"         default="F"/>

  <!-- System level -->
  <arg name="namespace_tiago"     default="/"/>
  <arg name="namespace_project"   default="robotics_intro"/>
  <arg name="public_sim"          default="True"/>
  <arg name="sim_sufix"           value="_public_sim" if="$(arg public_sim)"/>
  <arg name="sim_sufix"           value=""  unless="$(arg public_sim)"/>
  <arg name="tf_prefix"           default=""/>
  <env name="PAL_HOST"            value="tiago" />
  <env name="LC_NUMERIC"          value="C" />


  <!-- Navigation -->
  <arg name="provide_map"     default="false"/>
  <arg name="localization"    default="amcl"/>
  <arg name="map_path"        default="$(find robotics_project)/pal/tiago_maps/config"/>
  <arg name="global_planner"  default="navfn"/>
  <arg name="local_planner"   default="eband"/>
  <arg name="planner"         default="base"/>
  
  <!-- Simulation -->
  <arg name="robot"       default="steel"/>
  <arg name="rviz"        default="true"/>
  <arg name="gzclient"    default="true"/>
  <arg name="world"       default="appartment"/>
  <arg name="recording"   default="false"/>
  <arg name="multiple"    default="false"/>

  <!-- Definitions of pregrasp motion -->
  <rosparam command="load" file="$(find robotics_project)/config/pick_motions.yaml" /> 

  <!-- Robot re-spawners -->
  <include file="$(find robotics_project)/launch/launch_robot.launch">
    <arg name="level"     value="$(arg student_level)"/>
  </include>

  <node pkg="rosservice" type="rosservice" name="set_cube_pose" output="screen" args="call /gazebo/set_model_state '{model_state: { model_name: aruco_cube, pose: { position: { x: -1.130530, y: -6.653650, z: 0.86250 }, orientation: {x: 0, y: 0, z: 0, w: 1 } }, twist: { linear: {x: 0 , y: 0, z: 0 } , angular: { x: 0, y: 0, z: 0 } } , reference_frame: map } }'" />

  <!-- ROS NODES -->
  <group ns="$(arg namespace_tiago)">

    <!-- Manual controller -->
    <!-- <node pkg="key_teleop" type="key_teleop.py" name="manual_controller" output="screen" launch-prefix="xterm -e">
    </node> -->

    <!-- Project RGBD point cloud to laser-scan -->
<!--     <include file="$(find tiago_laser_sensors)/launch/rgbd_depth_laser.launch">
      <arg name="image"     value="xtion/depth_registered/image_raw"/>
      <arg name="scan"      value="rgbd_scan"/>
      <arg name="multiple"  value="$(arg multiple)"/>
      <arg name="tf_prefix" value="$(arg tf_prefix)"/>
    </include> -->

    <!-- AMCL Localization -->
    <!-- <include file="$(find tiago_2dnav)/launch/localization_$(arg localization).launch">
      <arg name="multiple"  value="$(arg multiple)"/>
      <arg name="tf_prefix" value="$(arg tf_prefix)"/>
    </include> -->

    <!-- Planning: move_base stack -->
    <!-- <include file="$(find tiago_2dnav)/launch/move_$(arg planner).launch">
      <arg name="global_planner" value="$(arg global_planner)"/>
      <arg name="local_planner"  value="$(arg local_planner)"/>
      <arg name="public_sim"     value="$(arg public_sim)"/>
      <arg name="tf_prefix"      value="$(arg tf_prefix)"/>
      <arg name="multiple"       value="$(arg multiple)"/>
    </include> -->
  </group>

  <group ns="$(arg namespace_project)">
    <!-- Mission planner -->
    <node pkg="robotics_project" type="sm_students.py" name="logic_state_machine" output="screen">
      <param name="global_loc_srv" value=""/>
      <param name="clear_costmaps_srv"  value=""/>
      <param name="pick_srv"            value=""/>
      <param name="place_srv"           value=""/>
      <param name="nav_goal_topic"      value=""/>
      <param name="cmd_vel_topic"       value="/key_vel"/>
      <param name="move_base_frame"     value=""/>
      <param name="pick_pose_topic"     value=""/>
      <param name="place_pose_topic"    value=""/>
      <param name="aruco_pose_topic"    value=""/>
      <param name="cube_pose"           value="0.50306828716, 0.0245718046511, 0.915538062216, 0.0144467629456, 0.706141958739, 0.707257659069, -0.0306827123383"/>
      <param name="robot_base_frame"          value="" />
      <param name="move_head_srv"       value="/$(arg namespace_project)/move_head_gui"/>
      <param name="amcl_estimate"  value="" />
      <param name="move_base_feedback"  value="" />
    </node>

    <!-- Goal robot poses for navigation -->
<!--     <node pkg="robotics_project" type="poses_pub.py" name="poses_publisher" output="screen">
      <param name="pick_pose"         value="-1.1480, -6.1, -0.001, 0.0, 0.0, -0.709307863674, 0.70489882574"/>
      <param name="place_pose"        value="2.6009, -1.7615, 0.0, 0.0, 0.0, 0.0, 1"/>
      <param name="pick_pose_topic"   value="/place_holder1"/>
      <param name="place_pose_topic"  value="/place_holder2"/>
      <param name="map_frame"   value="/place_holder3"/>
    </node> -->

    <!-- Node exposing service to trigger the pick and place -->
    <node pkg="robotics_project" name="manipulation_client" type="manipulation_client.py" output="screen">  
      <param name="marker_pose_topic"   value="/place_holder4"/>
      <param name="pick_srv"            value="/place_holder5"/>
      <param name="place_srv"           value="/place_holder6"/>
      <param name="move_head_srv"       value="/$(arg namespace_project)/move_head_gui"/>
      <param name="pickup_marker_pose"  value="/place_holder8"/>
      <param name="place_marker_pose"   value="/place_holder9"/>
    </node>

    <!-- Aruco marker detector -->
<!--     <node pkg="aruco_ros" type="single"  name="aruco_single" output="screen">
        <param name="camera_frame"        value="xtion_rgb_optical_frame"/>
        <param name="aruco_frame"        value="" />
        <remap from="/camera_info"        to="/xtion/rgb/camera_info" />
        <remap from="/image"              to="/xtion/rgb/image_rect_color" />
        <param name="marker_pose_topic"   value="/place_holder12"/>
        <param name="robot_base_frame"          value=""/>
    </node> -->
  </group>

  <!-- This node had to me moved out of the group for the PlanningSceneInterface() to be constructed -->
  <!-- Arm manipulation node -->
  <node pkg="robotics_project" name="manipulation_server" type="manipulation_server.py" output="screen">
      <rosparam command="load" file="$(find robotics_project)/config/pick_and_place_params.yaml" />
      <param name="pickup_marker_pose"  value="/place_holder10" />
      <param name="place_marker_pose"   value="/place_holder11" />
  </node>


  <!-- Map providers -->
<!--   <group if="$(arg provide_map)">
    <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_path)/map.yaml"/>
    <node name="relay_map" pkg="topic_tools" type="relay" args="/map /vo_map"/>
  </group> -->

</launch>
